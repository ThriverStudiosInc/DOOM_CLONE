{
	"globsDependent" : 
	[
		{
			"expression" : "E:/Dev/DoomClone/libs/glad/*.c",
			"paths" : 
			[
				"E:/Dev/DoomClone/libs/glad/glad.c"
			],
			"recurse" : true
		},
		{
			"expression" : "E:/Dev/DoomClone/libs/imgui/*.cpp",
			"paths" : 
			[
				"E:/Dev/DoomClone/libs/imgui/imgui.cpp",
				"E:/Dev/DoomClone/libs/imgui/imgui_demo.cpp",
				"E:/Dev/DoomClone/libs/imgui/imgui_draw.cpp",
				"E:/Dev/DoomClone/libs/imgui/imgui_impl_glfw.cpp",
				"E:/Dev/DoomClone/libs/imgui/imgui_impl_opengl3.cpp",
				"E:/Dev/DoomClone/libs/imgui/imgui_tables.cpp",
				"E:/Dev/DoomClone/libs/imgui/imgui_widgets.cpp"
			],
			"recurse" : true
		},
		{
			"expression" : "E:/Dev/DoomClone/libs/stb/*.c",
			"paths" : 
			[
				"E:/Dev/DoomClone/libs/stb/stb.c"
			],
			"recurse" : true
		},
		{
			"expression" : "E:/Dev/DoomClone/libs/tinyobj/*.cpp",
			"paths" : 
			[
				"E:/Dev/DoomClone/libs/tinyobj/tinyobj.cpp"
			],
			"recurse" : true
		},
		{
			"expression" : "E:/Dev/DoomClone/src/*.cpp",
			"paths" : 
			[
				"E:/Dev/DoomClone/src/Game/Game.cpp",
				"E:/Dev/DoomClone/src/Game/Rendering/Window.cpp",
				"E:/Dev/DoomClone/src/main.cpp"
			],
			"recurse" : true
		}
	],
	"inputs" : 
	[
		{
			"path" : "CMakeLists.txt"
		},
		{
			"isGenerated" : true,
			"path" : "build/Debug/CMakeFiles/3.30.0/CMakeSystem.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeSystemSpecificInitialize.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Initialize.cmake"
		},
		{
			"isGenerated" : true,
			"path" : "build/Debug/CMakeFiles/3.30.0/CMakeCCompiler.cmake"
		},
		{
			"isGenerated" : true,
			"path" : "build/Debug/CMakeFiles/3.30.0/CMakeCXXCompiler.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeSystemSpecificInformation.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeGenericSystem.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeInitializeConfigs.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/WindowsPaths.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeCInformation.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeLanguageInformation.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Compiler/Clang-C.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Compiler/Clang.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Compiler/GNU.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang-C.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-GNU.cmake"
		},
		{
			"isGenerated" : true,
			"path" : "build/Debug/CMakeFiles/3.30.0/CMakeRCCompiler.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeRCInformation.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-windres.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-GNU-C-ABI.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeCommonLanguageInclude.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeCXXInformation.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeLanguageInformation.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Compiler/Clang-CXX.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Compiler/Clang.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang-CXX.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Platform/Windows-GNU-CXX-ABI.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeCommonLanguageInclude.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/FindOpenGL.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/FindPackageHandleStandardArgs.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/FindPackageMessage.cmake"
		},
		{
			"path" : "libs/imgui/CMakeLists.txt"
		},
		{
			"path" : "libs/glfw/CMakeLists.txt"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/GNUInstallDirs.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakeDependentOption.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/FindThreads.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CheckLibraryExists.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CheckIncludeFile.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CheckCSourceCompiles.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/Internal/CheckSourceCompiles.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/FindPackageHandleStandardArgs.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/FindPackageMessage.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CMakePackageConfigHelpers.cmake"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/WriteBasicConfigVersionFile.cmake"
		},
		{
			"path" : "libs/glfw/CMake/glfw3Config.cmake.in"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/BasicConfigVersion-SameMajorVersion.cmake.in"
		},
		{
			"path" : "libs/glfw/src/CMakeLists.txt"
		},
		{
			"isCMake" : true,
			"isExternal" : true,
			"path" : "C:/mingw64/share/cmake-3.30/Modules/CheckIncludeFile.cmake"
		},
		{
			"path" : "libs/glfw/CMake/glfw3.pc.in"
		},
		{
			"path" : "libs/glad/CMakeLists.txt"
		},
		{
			"path" : "libs/stb/CMakeLists.txt"
		},
		{
			"path" : "libs/tinyobj/CMakeLists.txt"
		},
		{
			"path" : "libs/slog/CMakeLists.txt"
		}
	],
	"kind" : "cmakeFiles",
	"paths" : 
	{
		"build" : "E:/Dev/DoomClone/build/Debug",
		"source" : "E:/Dev/DoomClone"
	},
	"version" : 
	{
		"major" : 1,
		"minor" : 1
	}
}
